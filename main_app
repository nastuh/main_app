from kivy.app import App
from kivy.uix.screenmanager import ScreenManager, Screen
from kivy.uix.boxlayout import BoxLayout
from kivy.uix.label import Label
from kivy.uix.button import Button
from kivy.uix.textinput import TextInput
from kivy.core.window import Window
from kivy.uix.scrollview import ScrollView
from instructions import txt_instruction, txt_test1, txt_test2, txt_test3, txt_sits
from ruffier import test
from seconds import Seconds


age = 7
name = ""
p1, p2, p3 = 0, 0, 0

def check_in(str_num):
    try:
        return int(str_num)
    except:
        return False


class MainScreen(Screen):
    def __init__(self, **kwargs):
        super().__init__(**kwargs)
        txt = Label(text = txt_instruction)
        txt_name = Label(text = 'Введите имя:')
        txt_age = Label(text = 'Введите возраст:')
        self.name_input = TextInput(text = '...', multiline = False)
        self.age_input = TextInput(text = '7', multiline = False)
        self.btn = Button(text = 'Start', size_hint = (0.3, 0.1), pos_hint = {'center_x':0.5})
        hl1 = BoxLayout(height = '30sp', size_hint = (0.8, None))
        hl2 = BoxLayout(height = '30sp', size_hint = (0.8, None))
        hl1.add_widget(txt_name)
        hl1.add_widget(self.name_input)
        hl2.add_widget(txt_age)
        hl2.add_widget(self.age_input)
        ml = BoxLayout(orientation = 'vertical', padding = 10, spacing = 10)
        ml.add_widget(txt)
        ml.add_widget(hl1)
        ml.add_widget(hl2)
        ml.add_widget(self.btn)
        self.btn.on_press = self.next
        self.add_widget(ml)

    def next(self):
        global name, age
        name = self.name_input.text
        age = check_in(self.age_input.text)
        if age == False or age < 7:
            age = 7
            self.age_input.text = str(age)
        else:
            self.manager.current = 'First'


class SecondScreen(Screen):
    def __init__(self, **kwargs):
        super().__init__(**kwargs)
        self.sec = Seconds(1)
        self.sec.bind(done = self.enable_sec)
        self.next_screen = False
        txt = Label(text = txt_test1)
        txt_result = Label(text = 'Введите результат:')
        self.name_result = TextInput(text = '0', multiline = False)
        self.btn = Button(text = 'Начать замер', size_hint = (0.3, 0.1), pos_hint = {'center_x':0.5})
        hl3 = BoxLayout(height = '30sp', size_hint = (0.8, None))
        hl3.add_widget(txt_result)
        hl3.add_widget(self.name_result)
        ml2 = BoxLayout(orientation = 'vertical', padding = 10, spacing = 10)
        ml2.add_widget(txt)
        ml2.add_widget(hl3)
        ml2.add_widget(self.sec)
        ml2.add_widget(self.btn)
        self.btn.on_press = self.next_sec
        self.add_widget(ml2)

    def enable_sec(self, *args):
        self.btn.set_disabled(False)
        self.name_result.set_disabled(False)
        self.next_screen = True
        self.btn.text = 'Continue'

    def next_sec(self):
        global p1
        if not self.next_screen:
            self.btn.set_disabled(True)
            self.name_result.set_disabled(True)
            self.sec.start()
        else:
            p1 = check_in(self.name_result.text)
            if p1 == False or p1 < 1:
                p1 = 0
                self.name_result.text = str(p1)
            else:
                pass
            self.manager.current = 'Second'
        

class ThirdScreen(Screen):
    def __init__(self, **kwargs):
        super().__init__(**kwargs)
        self.second = Seconds(1)
        self.second.bind(done = self.only_sec)
        self.second_screen = False
        txt = Label(text = txt_sits)
        self.btn = Button(text = 'Continue', size_hint = (0.3, 0.1), pos_hint = {'center_x':0.5})
        hl4 = BoxLayout(height = '30sp', size_hint = (0.8, None))
        ml3 = BoxLayout(orientation = 'vertical', padding = 10, spacing = 10)
        ml3.add_widget(txt)
        ml3.add_widget(hl4)
        ml3.add_widget(self.second)
        ml3.add_widget(self.btn)
        self.btn.on_press = self.next_sec
        self.add_widget(ml3)

    def only_sec(self, *args):
        self.btn.set_disabled(False)
        self.second_screen = True
        self.btn.text = 'Continue'

    def next_sec(self):
        if not self.second_screen:
            self.btn.set_disabled(True)
            self.second.start()
        else:
            self.manager.current = 'Third'


class FourthScreen(Screen):
    def __init__(self, **kwargs):
        super().__init__(**kwargs)
        self.seconds = Seconds(1)
        self.seconds.bind(done = self.just_sec)
        self.third_screen = False
        txt = Label(text = txt_test3)
        txt_name = Label(text = 'Результат:')
        txt_age = Label(text = 'Результат после отдыха:')
        self.name_next = TextInput(text = '0', multiline = False)
        self.age_next = TextInput(text = '0', multiline = False)
        self.btn = Button(text = 'Continue', size_hint = (0.3, 0.1), pos_hint = {'center_x':0.5})
        hl5 = BoxLayout(height = '30sp', size_hint = (0.8, None))
        hl6 = BoxLayout(height = '30sp', size_hint = (0.8, None))
        hl5.add_widget(txt_name)
        hl5.add_widget(self.name_next)
        hl6.add_widget(txt_age)
        hl6.add_widget(self.age_next)
        ml4 = BoxLayout(orientation = 'vertical', padding = 10, spacing = 10)
        ml4.add_widget(txt)
        ml4.add_widget(hl5)
        ml4.add_widget(hl6)
        ml4.add_widget(self.seconds)
        ml4.add_widget(self.btn)
        self.btn.on_press = self.next
        self.add_widget(ml4)
    
    def just_sec(self, *args):
        self.btn.set_disabled(False)
        self.name_next.set_disabled(False)
        self.third_screen = True
        self.btn.text = 'Continue'

    def next(self):
        global p2, p3
        p2 = check_in(self.name_next.text)
        p3 = check_in(self.age_next.text)
        if (p3 == False or p3 < 0) and (p2 == False or p2 < 0):
            print((p3 == False or p3 < 0) and (p2 == False or p2 < 0))
            p3 = 0
            p2 = 0
            self.name_next.text = str(p3)            
            self.age_next.text = str(p2)            
        else:
            self.manager.current = 'Last'


class FifthScreen(Screen):
    def __init__(self, **kwargs):
        super().__init__(**kwargs)
        hl7 = BoxLayout(orientation = 'vertical')
        self.str = Label(text = '')
        hl7.add_widget(self.str)
        self.add_widget(hl7)
        self.on_enter = self.before

    def before(self):
        global name
        self.str.text = name + '\n' + test(p1, p2, p3, age)


class MyApp(App):
    def build(self):
        sm = ScreenManager()
        sm.add_widget(MainScreen(name = 'Main'))
        sm.add_widget(SecondScreen(name = 'First'))
        sm.add_widget(ThirdScreen(name = 'Second'))
        sm.add_widget(FourthScreen(name = 'Third'))
        sm.add_widget(FifthScreen(name = 'Last'))
        return sm

app = MyApp()
app.run()
